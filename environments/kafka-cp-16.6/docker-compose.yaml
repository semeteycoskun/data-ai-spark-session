version: "2"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./mnt-zk-01:/var/lib/zookeeper/data
      - ./mnt-zk-01:/var/lib/zookeeper/log

  kafka-broker-01:
    image: confluentinc/cp-kafka:7.8.0
    hostname: kafka-broker-01
    container_name: kafka-broker-01
    depends_on:
      - zookeeper
    ports:
      - "29091:29091"
      - "9091:9091"
    environment:
      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker-01:19091,EXTERNAL://${DOCKER_HOST_IP:-kafka-broker-01}:9091,DOCKER://host.docker.internal:29091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    volumes:
      - ./mnt-broker-01:/var/lib/kafka/data


  kafka-broker-02:
    image: confluentinc/cp-kafka:7.8.0
    hostname: kafka-broker-02
    container_name: kafka-broker-02
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker-02:19092,EXTERNAL://${DOCKER_HOST_IP:-kafka-broker-02}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    volumes:
      - ./mnt-broker-02:/var/lib/kafka/data

  kafka-broker-03:
    image: confluentinc/cp-kafka:7.8.0
    hostname: kafka-broker-03
    container_name: kafka-broker-03
    depends_on:
      - zookeeper
    ports:
      - "29093:29093"
      - "9093:9093"
    environment:
      DOCKER_HOST_IP: ${DOCKER_HOST_IP}
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker-03:19093,EXTERNAL://${DOCKER_HOST_IP:-kafka-broker-03}:9093,DOCKER://host.docker.internal:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    volumes:
      - ./mnt-broker-03:/var/lib/kafka/data


  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka-broker-01:29092,kafka-broker-02:29092,kafka-broker-03:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka-broker-01"
      #- "kafka-broker-02"
      #- "kafka-broker-03"
      
